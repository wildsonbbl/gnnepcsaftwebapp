services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./tls.yaml:/etc/traefik/tls.yaml:ro
      - ./certs:/etc/certs
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 50MB
    memswap_limit: 1G
    networks:
      - ip6net1

  webapp:
    scale: 1
    image: wildsonbbl/gnnepcsaft:v2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp-route.rule=HostRegexp(`gnnepcsaft.online`)"
      - "traefik.http.routers.webapp-route.entrypoints=websecure"
      - "traefik.http.routers.webapp-route.service=webapp-svc"
      - "traefik.http.services.webapp-svc.loadbalancer.server.port=8000"
      - "traefik.http.routers.webapp-route.tls=true"
      - "traefik.http.routers.webapp-route.tls.certresolver=letsencrypt"
      - "traefik.http.routers.webapp-route.tls.domains[0].main=gnnepcsaft.online"
      - "traefik.http.routers.webapp-route.tls.domains[0].sans=www.gnnepcsaft.online"

    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 925M
        reservations:
          memory: 256M
    memswap_limit: 1G
    command:
      ["gunicorn", "--timeout", "120", "--bind", "0.0.0.0:8000", "webapp.wsgi"]
    networks:
      - ip6net1

networks:
  ip6net1:
    name: "ip6net1"
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: "fdf6:e94a:ba2d::/64"
        #- gateway: "fdf6:e94a:ba2d::1"
#  docker network create --ipv6 --subnet="fdf6:e94a:ba2d::/64" --gateway="fdf6:e94a:ba2d::1" ip6net1
